{"version":3,"sources":["components/ComicList.js","components/Loading.js","App.js","reportWebVitals.js","index.js"],"names":["ComicList","data","showError","className","map","comic","title","src","thumbnail","path","extension","alt","id","Loading","App","PUBLIC_KEY","useState","setData","searchValue","setSearchValue","filteredData","setFilteredData","history","useHistory","useEffect","a","axios","get","response","results","getData","action","type","placeholder","value","onChange","e","target","name","onClick","preventDefault","result","push","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAuBeA,EArBG,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAClB,OAAkB,IADqB,EAAfC,UAGpB,sDAIA,qBAAKC,UAAU,aAAf,SACCF,EAAKG,KAAI,SAAAC,GACR,OACE,sBAAoBF,UAAU,QAA9B,UACE,6BAAKE,EAAMC,QACX,qBAAKC,IAAKF,EAAMG,UAAUC,KAAO,IAAMJ,EAAMG,UAAUE,UAAWC,IAAI,gBAF9DN,EAAMO,U,iBCDXC,G,MATC,WACd,OACE,sBAAKV,UAAU,UAAf,UACE,4CACA,qBAAKA,UAAU,gB,eCqDNW,MAjDf,WACE,IAAMC,EAAa,mCACnB,EAAwBC,mBAAS,IAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAAsCD,mBAAS,IAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KACA,EAAwCH,mBAAS,IAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KAEMC,EAAUC,cA0BhB,OAxBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACyBC,IAAMC,IAAN,iEAAoEZ,EAApE,qDADzB,OACQa,EADR,OAEEX,EAAQW,EAAS3B,KAAKA,KAAK4B,SAF7B,4CADY,uBAAC,WAAD,wBAKZC,KACD,IAmBD,sBAAK3B,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,4CACA,uBAAM4B,OAAO,GAAb,UACE,uBAAOC,KAAK,OAAOC,YAAY,WAAWC,MAAOhB,EAAaiB,SArB5C,SAACC,GACzBjB,EAAeiB,EAAEC,OAAOH,QAoByEI,KAAK,WAChG,wBAAQC,QAlBK,SAACH,GACpBA,EAAEI,iBACF,IAAIC,EAAS,GACbxC,EAAKG,KAAI,SAAAC,GACLiB,EAAQoB,KAAR,yBAA+BxB,IAC3Bb,EAAMC,MAAMqC,cAAcC,SAAS1B,EAAYyB,gBACjDF,EAAOC,KAAKrC,MAGlBgB,EAAgBoB,IASqBT,KAAK,SAApC,SAA6C,cAAC,IAAD,YAGjD,sBAAK7B,UAAU,YAAf,UACGiB,EAAayB,OAAS,EAAI,cAAC,EAAD,CAAW5C,KAAMmB,IAAkB,cAAC,EAAD,CAAWnB,KAAMA,IAC9EA,EAAK4C,OAAS,EAAI,6BAAQ,cAAC,EAAD,WCzCpBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9119a242.chunk.js","sourcesContent":["import './comic.css'\r\n\r\nconst ComicList = ({data, showError}) => {\r\n  if (showError === true) {\r\n    return(\r\n      <h2>404: No comics found</h2>\r\n    )\r\n  } else {\r\n    return(\r\n      <div className=\"comic-list\">\r\n      {data.map(comic => {\r\n        return(\r\n          <div key={comic.id} className=\"comic\">\r\n            <h2>{comic.title}</h2>\r\n            <img src={comic.thumbnail.path + \".\" + comic.thumbnail.extension} alt=\"thumbnail\"/>\r\n          </div>\r\n        )\r\n      })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComicList\r\n","import './loader.css'\r\n\r\nconst Loading = () => {\r\n  return(\r\n    <div className=\"loading\">\r\n      <h2>Loading...</h2>\r\n      <div className=\"loader\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import axios from 'axios'\nimport { useState, useEffect} from 'react'\nimport ComicList from './components/ComicList'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Loading from './components/Loading'\nimport './App.css'\nimport {\n  useHistory\n} from \"react-router-dom\";\n\nfunction App() {\n  const PUBLIC_KEY = '572b5d060667c930ab420ac05d539be3';\n  const [data, setData] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(() => {\n      async function getData(){\n        const response = await axios.get(`http://gateway.marvel.com/v1/public/comics?ts=1&apikey=${PUBLIC_KEY}&hash=9a237f72eccc957b539bd695d8c61816&limit=100`);\n        setData(response.data.data.results);\n      }\n      getData();\n  }, [])\n\n  const handleSearchValue = (e) => {\n    setSearchValue(e.target.value)\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    let result = [];\n    data.map(comic => {\n        history.push(`/search/comics/${searchValue}`)\n        if (comic.title.toLowerCase().includes(searchValue.toLowerCase())) {\n          result.push(comic);\n      }\n    })\n    setFilteredData(result)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <h1>Marvel App</h1>\n        <form action=\"\">\n          <input type=\"text\" placeholder=\"Search..\" value={searchValue} onChange={handleSearchValue} name=\"search\" />\n          <button onClick={handleSearch} type=\"submit\"><SearchIcon /></button>\n        </form>\n      </div>\n      <div className=\"container\">\n        {filteredData.length > 0 ? <ComicList data={filteredData}/> : <ComicList data={data} /> }\n        {data.length > 0 ? <></> : <Loading />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}